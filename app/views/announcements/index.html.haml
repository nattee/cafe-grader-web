%h1 Announcements
.row.mb-3
  .col-md-5.mb-3
    = link_to '+ Add announcement', new_announcement_path, class: 'btn btn-success'
  .col-md-7
    .card.bg-warning-subtle.shadow-sm.mb-3
      .card-body
        :markdown
          ### How Announcements Work
          1. __Formatting & Status__: All announcements can be formatted using **[Markdown](https://www.markdownguide.org/basic-syntax/)**. To make an announcement visible, you must set its status to **Published**. Drafts are never shown to users.
          2. __Audience Targeting__: You can control who sees an announcement by setting its visibility:
            * **Front Page Announcements:* These are visible to **everyone** who visits the site, even before they log in. Use this for system-wide notices.
            * **Public Announcements:* These are visible to **any user who is logged in**. This is the default for internal communications. Note: Only Administrators can create this type of announcement.
            * **Group-Specific Announcements:* To restrict an announcement to a specific audience, assign it to a user group. Only members of that group will see the announcement after logging in.

%table.table.table-striped
  %thead
    %th Updated
    %th Announcement
    %th Author
    %th{style: 'width: 100px'} Published?
    %th{style: 'width: 100px'} Front?
    %th Group
    %th
    %th
  - for announcement in @announcements
    %tr
      - @announcement = announcement
      %td= time_ago_in_words announcement.updated_at
      %td
        - if !announcement.title.blank?
          %b Title:
          = h announcement.title
          %br/
        - if !announcement.notes.blank?
          %b
            Notes: #{h announcement.notes}
          %br/
        = h announcement.body
      %td= h announcement.author
      %td
        .form-check.form-switch
          %input.form-check-input{id: "ann-#{announcement.id}-published-switch", checked: announcement.published, type: "checkbox", data: {action: 'announcement#toggle', 'row-id': announcement.id, field: 'published'}}
      %td
        .form-check.form-switch
          %input.form-check-input{id: "ann-#{announcement.id}-front-switch", checked: announcement.frontpage, type: "checkbox", data: {action: 'announcement#toggle', 'row-id': announcement.id, field: 'front'}}
      %td
        - if announcement.group.nil?
          .badge.text-bg-success Public
          
        - else
          = announcement.group.name
      %td= link_to 'Edit', edit_announcement_path(announcement)
      %td= link_to 'Destroy', announcement, :confirm => 'Are you sure?', :method => :delete, class: "btn btn-block btn-sm btn-danger"
%br

-# hidden form for announcement toggle
= form_with url: toggle_published_announcement_path(-123), html: {data: {turbo: true, action: 'turbo:submit-end->announcement#resetToggleForm', 'announcement-target': 'togglePublishedForm'} } do
  /
= form_with url: toggle_front_announcement_path(-123), html: {data: {turbo: true, action: 'turbo:submit-end->announcement#resetToggleForm', 'announcement-target': 'toggleFrontForm'}} do
  /
:javascript
  function set_announcement_switch(announcement_id,published,front) {
    document.getElementById(`ann-${announcement_id}-published-switch`).checked = published
    document.getElementById(`ann-${announcement_id}-published-switch`).disabled = false

    document.getElementById(`ann-${announcement_id}-front-switch`).checked = front
    document.getElementById(`ann-${announcement_id}-front-switch`).disabled = false

  }

