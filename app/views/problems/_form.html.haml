- @active_problem_tab = '#general' unless %w[#general #description #hint].include? @active_problem_tab
=turbo_frame_tag :problem, data: {controller: 'init-ui-component bs-tab', turbo: true} do
  %ul.nav.nav-tabs
    %li.nav-item
      %button.nav-link{data: {bs: {toggle: :tab, target: "#general"}},class: ('active' if @active_problem_tab == '#general') } General
    %li.nav-item
      %button.nav-link{data: {bs: {toggle: :tab, target: "#description"}},class: ('active' if @active_problem_tab == '#description')} Description
    %li.nav-item
      %button.nav-link{data: {bs: {toggle: :tab, target: "#hint"}},class: ('active' if @active_problem_tab == '#hint')} Hint
  = simple_form_for problem, wrapper: :horizontal_form do |form|
    -# this is to set the currently active tab of the problem
    %input{type: 'hidden', name: 'active_problem_tab', 'data-bs-tab-target': 'activeTabInput'}
    .tab-content
      %div#general.my-3.tab-pane.fade{class: (' show active ' if @active_problem_tab == '#general')}
        -# general
        = form.input :name
        = form.input :full_name
        = form.input :statement, wrapper: :horizontal_file
        .row
          .col-sm-3
          .col-sm-9
            %p
              - if @problem.statement.attached?
                = link_to "<span class='mi mi-bs md-18'>description</span> Read (#{@problem.statement.filename})".html_safe, download_by_type_problem_path(@problem,'statement'), target: '_blank', data: {turbo: false}
                = " | "
                = link_to '<span class="mi mi-bs md-18">delete</span> Delete'.html_safe, delete_by_type_problem_path(@problem,'statement'), class: 'link-danger', data: {turbo: true, turbo_method: 'delete', turbo_confirm: 'Really delete the Statement? This cannot be undone.'}
              - else
                This problem has no statement
        = form.input :attachment, wrapper: :horizontal_file
        .row
          .col-sm-3
          .col-sm-9
            %p
              - if @problem.attachment.attached?
                = link_to "<span class='mi mi-bs md-18'>archive</span> File (#{@problem.attachment.filename})".html_safe, download_by_type_problem_path(@problem,'attachment'), target: '_blank', data: {turbo: false}
                |
                = link_to '<span class="mi mi-bs md-18">delete</span> Delete'.html_safe, delete_by_type_problem_path(@problem,'attachment'), class: 'link-danger', data: {turbo: true, turbo_method: 'delete', turbo_confirm: 'Really delete the Attachment? This cannot be undone.'}
              - else
                This problem has no attachment
        = form.input :tag_ids, label: 'Tags', collection: Tag.all, input_html: {class: 'select2', multiple: true}, wrapper: :horizontal_form, tooltip: "Tags with public value of true will be shown to contestant in the main page"
        = form.input :group_ids, label: 'Groups', collection: Group.all, input_html: {class: 'select2', multiple: true}, wrapper: :horizontal_form
        = form.input :permitted_lang, label: 'Allowed Language', collection: Language.all, selected: @problem.get_permitted_lang_as_ids(when_blank: nil), input_html: {class: 'select2', multiple: true}, wrapper: :horizontal_form, tooltip: 'Blank value means any language can be used'
        = form.input :date_added, input_html: {value: @problem.date_added&.strftime("%d/%b/%Y"), class: 'tempus-dominus'}, wrapper: :horizontal_form, as: :string, tooltip: 'Date added is use as a main sorting order for problems in the main page'
        = form.input :available, wrapper: :horizontal_boolean, label: 'Globally Available', tooltip: 'If "Globally available" is not set, the problem will remain hidden from all contestants, even if enabled in groups or contests.' , disabled: @current_user.admin? == false
        = form.input :view_testcase, wrapper: :horizontal_boolean, disabled: @current_user.admin? == false
        = form.input :difficulty, tooltip: 'Input integer value from 0 to 10'
        = form.input :compilation_type, collection: [['[Self Contained] The submissions can be compiled by itself','self_contained'],['[With managers] The submission will be compiled with the managers','with_managers']], wrapper: :horizontal_select
        = form.input :submission_filename
        = form.button :submit, class: 'btn btn-primary me-2'
      %div#description.my-3.tab-pane.fade{class: (' show active ' if @active_problem_tab == '#description')}
        -# Description
        .card.bg-warning-subtle.shadow-sm.mb-3
          .card-body
            %ul.mb-0
              %li
                Description is used internally and it is not shown to contestants. Its main usage is for
                generating of a PDF statement and as a machine readable text of the statement.
              %li
                With LLM plugins, this description will be sent to the LLM of your choice for hinting and suggesting help to the contestant.
              %li
                You are not required to use a description, but when it is used, the content should match the actual PDF.
        = form.input :description, as: :text, wrapper: :vertical_form
        -# we hide the markdown and url which are no longer used
          = form.input :markdown, wrapper: :horizontal_boolean
          = form.input :url
        %p
          - if @problem.generated_statement.attached?
            = link_to "<span class='mi mi-bs md-18'>description</span> Generated Statement".html_safe, download_by_type_problem_path(@problem,'generated_statement'), target: '_blank', data: {turbo: false}
            = " | "
            = link_to '<span class="mi mi-bs md-18">delete</span> Delete'.html_safe, delete_by_type_problem_path(@problem,'generated_statement'), class: 'link-danger', data: {turbo: true, turbo_method: 'delete', turbo_confirm: 'Delete the generated document?'}
          - else
            This problem has no statement
        = form.button :submit, class: 'btn btn-primary me-2'
  .tab-content
    %div#hint.tab-pane.fade.my-3{class: (' show active ' if @active_problem_tab == '#hint'), data: {controller: 'children-select'}}
      -# dataset selector
      = turbo_frame_tag :hint_select do
        = render partial: 'hint_select', locals: {ds: @problem.live_dataset, problem: @problem}
      -# dataset form
      = turbo_frame_tag :hint_detail, src: edit_problem_hint_index_path(@problem,@problem.hints.first)


:javascript
  function problem_form_init() {
    //let td_options = structuredClone(cafe.config.td.date)
    //td_options['localization']['format'] = 'dd/MM/yyyy'
    //new TempusDominus(document.getElementById('problem_date_added'), td_options );
    //cafe.initSelect2()
  }


