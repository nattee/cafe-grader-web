=turbo_frame_tag :problem, data: {controller: 'problem', turbo: true} do
  = simple_form_for problem, wrapper: :horizontal_form do |form|
    %h4 Problem Detail
    = form.input :name
    = form.input :full_name
    = form.input :tag_ids, label: 'Tags', collection: Tag.all, input_html: {class: 'select2', multiple: true}, wrapper: :horizontal_form, tooltip: "Tags with public value of true will be shown to contestant in the main page"
    = form.input :group_ids, label: 'Groups', collection: Group.all, input_html: {class: 'select2', multiple: true}, wrapper: :horizontal_form
    = form.input :permitted_lang, label: 'Allowed Language', collection: Language.all, selected: @problem.get_permitted_lang_as_ids(when_blank: nil), input_html: {class: 'select2', multiple: true}, wrapper: :horizontal_form, tooltip: 'Blank value means any language can be used'
    = form.input :date_added, input_html: {value: @problem.date_added&.strftime("%d/%m/%Y")}, wrapper: :horizontal_form, as: :string, tooltip: 'Date added is use as a main sorting order for problems in the main page'
    = form.input :available, wrapper: :horizontal_boolean, label: 'Globally Available', tooltip: 'If "Globally available" is not set, the problem will remain hidden from all contestants, even if enabled in groups or contests.' , disabled: @current_user.admin? == false
    = form.input :view_testcase, wrapper: :horizontal_boolean, disabled: @current_user.admin? == false
    = form.input :difficulty, tooltip: 'Input integer value from 0 to 10'
    = form.input :compilation_type, collection: [['[Self Contained] The submissions can be compiled by itself','self_contained'],['[With managers] The submission will be compiled with the managers','with_managers']], wrapper: :horizontal_select
    = form.input :submission_filename
    %h4 Statements

    -# statement
    = form.input :statement, wrapper: :horizontal_file
    .row
      .col-md-3
      .col-md-9
        %p
          - if @problem.statement.attached?
            = link_to "<span class='mi mi-bs md-18'>description</span> Read (#{@problem.statement.filename})".html_safe, get_statement_problem_path(@problem), data: {turbo: false}
            = " | "
            = link_to '<span class="mi mi-bs md-18">delete</span> Delete'.html_safe, statement_problem_path(@problem), method: :delete, class: 'link-danger', data: {confirm: 'Are you sure?'}
          - else
            This problem has no statement
    = form.input :description, as: :text
    = form.input :markdown, wrapper: :horizontal_boolean
    = form.input :url
    %h4 Attachment
    = form.input :attachment, wrapper: :horizontal_file
    .row
      .col-md-3
      .col-md-9
        %p
          - if @problem.attachment.attached?
            = link_to "<span class='mi mi-bs md-18'>archive</span> File (#{@problem.attachment.filename})".html_safe, get_attachment_problem_path(@problem)
            |
            = link_to '<span class="mi mi-bs md-18">delete</span> Delete'.html_safe, attachment_problem_path(@problem), method: :delete, class: 'link-danger', data: {confirm: 'Are you sure?'}
          - else
            This problem has no attachment
    = form.button :submit, class: 'btn btn-primary me-2'

:javascript
  function problem_form_init() {
    let td_options = structuredClone(cafe.config.td.date)
    td_options['localization']['format'] = 'dd/MM/yyyy'
    new TempusDominus(document.getElementById('problem_date_added'), td_options );
    cafe.initSelect2()
  }


