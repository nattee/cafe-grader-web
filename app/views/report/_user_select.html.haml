.card.border-primary.mb-2{data: {controller: 'form--filter-user', action: 'change->form--filter-user#filterChanged'}}
  .card-header.text-bg-primary.border-primary
    Users
  .card-body
    .row.mb-2
      .col-1
        .form-check
          = radio_button_tag :'users[use]', :all, true, class: 'form-check-input', data: {'form--filter-user-target': 'useOption'}
      .col-11
        .form-check.ps-0
          = label_tag :users_use_all, 'All Users', class: 'form-check-label'
    .row.mb-2
      .col-1
        .form-check
          = radio_button_tag :'users[use]', :enabled, false, class: 'form-check-input', data: {'form--filter-user-target': 'useOption'}
      .col-11
        .form-check.ps-0
          = label_tag :users_use_enabled, 'Only enabled users', class: 'form-check-label'
    .row
      .col-1
        .form-check
          = radio_button_tag :'users[use]', :group, false, class: 'form-check-input', data: {'form--filter-user-target': 'useOption'}
      .col-11
        .form-check.ps-0
          = label_tag :users_use_group, 'Only users from this group', class: 'form-check-label'
    .row
      .col-1
      .col-11
        = select_tag "users[group_ids]", options_from_collection_for_select( Group.all.order('id DESC'), 'id','name',params[:group_id]),
          class: 'select2', style: 'width: 20em', data: {'form--filter-user-target': 'groupSelect'};
    .row.mt-1
      .col-1
      .col-11
        .form-check
          %input#only-users.form-check-input{type: 'checkbox', name: 'users[only_users]', checked: true, data: {'form--filter-user-target': 'onlyUsers'}}
          %label.form-check-label{for: 'only-users'} Exclude editors and reporters

:javascript
  // save the problem selection input into d
  // (to be used by DataTable Ajax data source)
  function build_user_params(d) {
    d['users[use]'] = $('input[name="users[use]"]:checked').val()
    if ($('select[name="users[group_ids]"]').hasClass("select2-hidden-accessible"))
      d['users[group_ids]']= $('select[name="users[group_ids]"]').select2('data').map( e=>e.id )
  }
