%textarea#text_sourcecode{style: "display:none"}~ @source
.container
  .row
    .col-md-12
      %h2 Live submit

  .row
    .col-md-12
      - unless @as_binary
        .alert.alert-info
          Write your code in the following box, choose language, and click submit button when finished
  .row
    .col-lg-8
      - unless @as_binary
        %div.mb-3#editor{style: 'height: 500px; border-radius: 7px; font-size: 14px;'}
      - else
        .alert.alert-success
          The problem only accept upload of an archive file. Select a file using the button
          %strong "Browse"
          and click submit.
        - if @submission && @submission.binary
          %ul
            %li You have already submitted a file.
            %li
              The submitted file can be 
              = link_to 'download', download_submission_path(@submission)
              here.
    .col-lg-4
      -# submission form
      .card.mb-3
        .card-header
          Submission
        .card-body
          = form_with url: submit_main_path, :multipart => true, class: 'form' do |form|
            = hidden_field_tag 'editor_text', @source
            = hidden_field_tag 'submission[problem_id]', @problem.id
            .row.mb-2
              .col-md-4
                = form.label "Task", class: 'col-form-label text-secondary'
              .col-md-8
                = form.label nil, "#{@problem.full_name}", class: 'mb-0 pb-0 col-form-label fw-bold'
                %br
                = form.label nil, "#{@problem.name}", class: 'my-0 py-0 col-form-label text-muted'
                %br
                %span= @problem.live_dataset.time_limit
                %span.text-muted (s)
                |
                %span= @problem.live_dataset.memory_limit
                %span.text-muted (MB)
            .row.mb-2
              .col-md-4
                = form.label "Description", class: 'col-form-label text-secondary'
              .col-md-8.col-form-label
                = link_to_description_if_any "[Read <span class='mi mi-bs'>description</span>]".html_safe, @problem
            - if @problem.attachment.attached?
              .row.mb-2
                .col-md-4
                  = form.label "Attachment", class: 'col-form-label text-secondary'
                .col-md-8.col-form-label
                  = link_to "[File <span class='mi mi-bs'>archive</span>]".html_safe, get_attachment_problem_path(@problem)
            .row.mb-2
              .col-md-4
                = form.label :language_id, 'Language', class: 'col-form-label text-secondary'
              .col-md-8
                - options = options_from_collection_for_select(Language.where(id: @problem.get_permitted_lang_as_ids), 'id', 'pretty_name', @language.id )
                = form.select :language_id, options, {},  class: 'form-select', style: "width: 100px", id: 'language_id'
            .row.mb-2
              .col-12
                = form.file_field :file, class: 'form-control', id: 'load_file'
            .row.mb-2
              .col-12
                = submit_tag 'Submit', class: 'btn btn-success', id: 'live_submit', 
                  data: {confirm: "Submitting this source code for task #{@problem.long_name}?"}

      -# latest submission status
      .card
        .card-header.text-bg-info.border-info
          Latest Submission Status
          = link_to "Refresh",get_latest_submission_status_submissions_path(@submission.user,@problem), id: 'refresh', class: "btn btn-light btn-sm", remote: true if @submission
        .card-body
          #latest_status

:javascript
  $(document).ready(function() {

    var e = ace.edit("editor")
    e.setValue($("#text_sourcecode").val());
    e.gotoLine(1);
    $("#language_id").trigger('change');

    $("#load_file").on('change',function(evt) {
      var file = evt.target.files[0];
      var reader = new FileReader();
      reader.onload =  function(theFile) {
        var e = ace.edit("editor")
        e.setValue(theFile.target.result);
        e.gotoLine(1);
      };
      reader.readAsText(file)
    });

    $("#live_submit").on("click", function(event) {
      $("#editor_text").val(e.getValue());
    });

    $("#language_id").on("change", function(event) {
      text = $("#language_id option:selected").text();
      mode = 'ace/mode/c_cpp';
      switch (text) {
        case 'Pascal':
          mode = 'ace/mode/pascal';
          break;
        case 'C++':
        case 'C':
          mode = 'ace/mode/c_cpp';
          break;
        case 'Ruby':
          mode = 'ace/mode/ruby';
          break;
        case 'Python':
          mode = 'ace/mode/python';
          break;
        case 'Java':
          mode = 'ace/mode/java';
          break;
        case 'Rust':
          mode = 'ace/mode/rust';
          break;
        case 'Go':
          mode = 'ace/mode/golang';
          break;
        case 'PHP':
          mode = 'ace/mode/php';
          break;
        case 'Haskell':
          mode = 'ace/mode/haskell';
          break;
      }
      e.getSession().setMode(mode);
    });

    $('#refresh').click()
    $('#language_id').change()

  });




