-# requires submission
- if @submission.comments.any?
  - kinds = [ 'llm_assist','comment']
  - kinds.each do |kind|
    - @submission.comments.where(kind: kind).each do |comment|
      // add highligh class to the new item, if exists
      .row{class: ('new-item-highlight' if comment.id == @comment&.id)}
        .col
          - if comment.kind == 'llm_assist'
            .badge.rounded-pill.text-primary.bg-primary-subtle.me-2 AI
          - elsif comment.kind == 'comment'
            .badge.rounded-pill.text-info.bg-info-subtle.me-2 Comment
          %span= comment.title.html_safe
        .col-auto.text-end
          = link_to 'View', submission_comment_path(@submission,comment), data: {turbo: true, turbo_stream: true}
          - if @no_edit == false && @current_user.problems_for_action(:report).where(id: @submission.problem).any?
            |
            = link_to 'Edit', '#',
              data: {turbo: true, turbo_stream: true, action: 'click->submission-comment#populateFormForUpdate',
                bs_toggle: 'modal', bs_target: '#comment-modal',
                submission_comment_comment_param: comment.to_json(only: %i[ id title body ]), 
                submission_comment_url_param: submission_comment_path(@submission, comment)}
            |
            = link_to 'Delete', submission_comment_path(@submission,comment), class: 'text-danger',
              data: {turbo: true, turbo_method: 'DELETE', turbo_stream: true, turbo_confirm: "Are you sure to delete the comment titled '#{comment.title}'"}
- else
  %em -- There is no comment for this submission --
