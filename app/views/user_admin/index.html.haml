%h1 Users


%p
  = link_to '+ New user', { :action => 'new' }, { class: 'btn btn-success m-1'}
  = link_to '+ New list of users', { :action => 'new_list' }, { class: 'btn btn-success m-1'}
  = link_to 'Bulk Manage', { action: :bulk_manage} , { class: 'btn btn-secondary btn-info m-1'}
  = link_to 'View administrators',{ :action => 'admin'}, { class: 'btn btn-secondary m-1'}

%table#main-table.table.table-hover.table-condense.datatable
  %thead
    %th Login
    %th Full name
    %th email
    %th Remark
    %th 
      Activated
      %sup{class: 'text-primary',data: {toggle: 'tooltip', placement: 'top'}, title: 'User has already confirmed the email?' } [?]
    %th 
      Enabled
      %sup{class: 'text-primary',data: {toggle: 'tooltip', placement: 'top'}, title: 'Allow the user to login?' } [?]
    %th Session Clear
    %th <!-- edit -->
    %th <!-- destroy -->

-# hidden user action form
= form_with url: user_action_user_admin_index_path, html: {'data-user-admin--index-target': 'userForm', id: 'do-user-form',
  data: {turbo: true, action: 'turbo:submit-end->user-admin--index#afterUserAction', 'turbo-confirm': 'placeholder'}} do |f|
  = f.hidden_field :user_id, 'data-user-admin--index-target': 'userFormUserID'
  = f.hidden_field :command, 'data-user-admin--index-target': 'userFormCommand'

:javascript
  window.addEventListener("load", function() {
    $('#main-table').DataTable({
      processing: true,
      rowId: 'id',
      destroy: true,
      'pageLength': 50,
      ajax: {
        url: "#{index_query_user_admin_index_path}",
        type: 'POST',
        headers: { 'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'), },
        dataSrc: function(json) {
          return json.data
        }
      },
      layout: {
        topStart: 'info',
        topEnd: 'search',
      },
      columns: [ 
        //login with stat link
        {data: 'login', render: cafe.dt.render.link(null, {path: '#{stat_user_admin_path(-123)}'})},
        {data: 'full_name'},
        {data: 'email'},
        {data: 'remark'},
        // activated status
        {data: 'activated', render: cafe.dt.render.yes_no_pill(), className: 'text-center' },
        // enabled switch
        {data: 'id', render: cafe.dt.render.button(null, {element_type: 'switch', action: 'user-admin--index#postUserAction', command: 'toggle', checked_data_field: 'enabled'})},
        // clear ip action
        {data: 'id', render: cafe.dt.render.button(`[${cafe.msi('lock_reset','md-18')} Clear]`, {element_type: 'link', className: 'link-primary', action: 'user-admin--index#postUserAction', command: 'clear_ip'} )},
        // edit link
        {data: null, render: cafe.dt.render.link(`${cafe.msi('edit','md-18')} Edit`, {path: '#{edit_user_admin_path(-123)}' })},
        // destroy action
        {data: null, render: cafe.dt.render.link(`${cafe.msi('delete','md-18')} Destroy`, {path: '#{user_admin_path(-123)}', method: 'delete', confirm: 'Really delete this user?', className: 'btn btn-sm btn-danger', }), className: 'align-middle py-1'},
      ],
      columnDefs: [{orderable: false, targets: [6,7,8]} ],
    });
  })
